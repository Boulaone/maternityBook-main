DROP DATABASE IF EXISTS MATERNITY_BOOK;
CREATE DATABASE MATERNITY_BOOK;
USE MATERNITY_BOOK;
CREATE TABLE GROSSESSE(
        ID_GROSSESSE       Int  Auto_increment  NOT NULL ,
        ABONNEMENT         ENUM ('classic', 'Premium') DEFAULT 'classic',
        PREMIERE_GROSSESSE Boolean NOT NULL DEFAULT true ,
        DATE_ACCOUCHEMENT  Date ,
        DATE_CONCEPTION    Date ,
        DUREE_MOY_CYCLE    Int ,
        DATE_REGLES        Date ,
        CHOIX_MATERNITE    Varchar (50) ,
        ARRIV_MATERNITE    Datetime ,
        DEPART_MATERNITE   Datetime ,
        PERIDURALE         Boolean ,
        PERTE_EAUX         Varchar (30) ,
        TYPE_ACCOUCHEMENT  Varchar (30) ,
        LIVRE              Varchar (255) ,
        PARTAGE_COMPTE     Boolean DEFAULT false ,       
	CONSTRAINT GROSSESSE_PK PRIMARY KEY (ID_GROSSESSE));
CREATE TABLE `USER`(
        ID_USER        Int  Auto_increment  NOT NULL ,
        ROLE           ENUM ('admin', 'gratuit', 'abonne_p', 'abonne_sec')  DEFAULT 'gratuit',
        PSEUDO         Varchar (30) DEFAULT 'Utilisateur' NOT NULL ,
        PASSWORD       Varchar (50) NOT NULL ,
        MAIL           Varchar (50) NOT NULL ,
        PRENOM         Varchar (30) NOT NULL ,
        NOM            Varchar (30) NOT NULL ,
        PHOTO_PROFIL   Varchar (255) ,
        APPLE          Varchar (50) ,
        GOOGLE         Varchar (50) ,
        FACEBOOK       Varchar (50) ,
        NEWSLETTER     Boolean DEFAULT true NOT NULL ,
        DEM_COMMERCIAL Boolean DEFAULT true NOT NULL ,
        ID_GROSSESSE   Int ,
        ID_PARENT      Int ,
	CONSTRAINT USER_PK PRIMARY KEY (ID_USER) ,
        CONSTRAINT USER_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE) ,
        CONSTRAINT USER_PARENT_FK FOREIGN KEY (ID_PARENT) REFERENCES PARENT(ID_PARENT));
CREATE TABLE PARENT(
        ID_PARENT        Int  Auto_increment  NOT NULL ,
        LIEN_PARENTE     Varchar (20) NOT NULL DEFAULT 'Maman' ,
        PRENOM           Varchar (50),
        ENCEINTE         Boolean NOT NULL DEFAULT true ,
        CONJOINT         Boolean NOT NULL DEFAULT false,
        POIDS_NAIS       Float ,
        TAILLE_NAIS      Float ,
        GROUPE_SANG      Varchar (3) ,
        PHOTO_BEBE       Varchar (255) ,
        PHOTO_ACTUEL     Varchar (255) ,
        DATE_NAIS        Datetime ,
        DEPARTEMENT_NAIS Varchar (2) ,
        ID_GROSSESSE     Int NOT NULL ,
	CONSTRAINT PARENT_PK PRIMARY KEY (ID_PARENT),
	CONSTRAINT PARENT_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));
CREATE TABLE AVATAR(
        ID_AVATAR    Int  Auto_increment  NOT NULL ,
        CORPULENCE   Varchar (20) NOT NULL ,
        COUL_PEAU    Varchar (20) NOT NULL ,
        COUL_YEUX    Varchar (20) NOT NULL ,
        COUL_CHEVEUX Varchar (20) NOT NULL ,
        TYPE_CHEVEUX Varchar (20) NOT NULL ,
        ACCESSOIRES  Varchar (20) ,
        BARBE        Varchar (20) ,
        ID_PARENT    Int NOT NULL ,
	CONSTRAINT AVATAR_PK PRIMARY KEY (ID_AVATAR),
	CONSTRAINT AVATAR_PARENT_FK FOREIGN KEY (ID_PARENT) REFERENCES PARENT(ID_PARENT),
	CONSTRAINT AVATAR_PARENT_AK UNIQUE (ID_PARENT));
CREATE TABLE BEBE(
        ID_BEBE       Int  Auto_increment  NOT NULL ,
        SEXE          ENUM ('F','M') ,
        PRENOM        Varchar (30) ,
        PRENOM_2      Varchar (30) ,
    	PRENOM_3      Varchar (30) ,
        POIDS         Float ,
        TAILLE        Float ,
        DATE_NAIS     Datetime ,
        ID_GROSSESSE  Int NOT NULL,
	CONSTRAINT BEBE_PK PRIMARY KEY (ID_BEBE),
	CONSTRAINT BEBE_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));
CREATE TABLE ARTICLE_BLOG(
        ID_ARTICLE Int  Auto_increment  NOT NULL ,
        TITRE      Varchar (50) NOT NULL ,
        BODY       Text NOT NULL ,
        DATE       Datetime DEFAULT CURRENT_TIMESTAMP ,
        AUTEUR     Varchar (30) NOT NULL ,
        PARTENAIRE Varchar (30) NOT NULL ,
	CONSTRAINT ARTICLE_BLOG_PK PRIMARY KEY (ID_ARTICLE));
CREATE TABLE CATEG_FORUM(
        ID_CATEG Int  Auto_increment  NOT NULL ,
        NOM      Varchar (50) NOT NULL ,
	CONSTRAINT CATEG_FORUM_PK PRIMARY KEY (ID_CATEG));
CREATE TABLE POST_FORUM(
        ID_POST  Int  Auto_increment  NOT NULL ,
        TITRE    Varchar (50) NOT NULL ,
        BODY     Text NOT NULL ,
        DATE     Datetime DEFAULT CURRENT_TIMESTAMP ,
        ID_USER  Int NOT NULL ,
        ID_CATEG Int ,
	CONSTRAINT POST_FORUM_PK PRIMARY KEY (ID_POST) ,
	CONSTRAINT POST_FORUM_USER_FK FOREIGN KEY (ID_USER) REFERENCES USER(ID_USER) ,
	CONSTRAINT POST_FORUM_CATEG_FORUM_FK FOREIGN KEY (ID_CATEG) REFERENCES CATEG_FORUM(ID_CATEG));
CREATE TABLE CARTE_CADEAU(
        ID_CARTE_CADEAU Int  Auto_increment  NOT NULL ,
        NOM             Varchar (30) NOT NULL ,
        MESSAGE         Varchar (255) ,
        CODE            Varchar (20) NOT NULL ,
        DATE_VALIDITE   Date NOT NULL ,
        ID_GROSSESSE    Int NOT NULL ,
	CONSTRAINT CARTE_CADEAU_PK PRIMARY KEY (ID_CARTE_CADEAU) ,
    CONSTRAINT CARTE_CADEAU_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));
CREATE TABLE MEDICAL(
        ID_MEDICAL   Int  Auto_increment  NOT NULL ,
        TYPE         Varchar (40) ,
        NOM          Varchar (40) NOT NULL ,
        ADRESSE      Varchar (80) ,
        CP           Varchar (5) ,
        VILLE        Varchar (40) ,
        TELEPHONE    Varchar (10) ,
        ID_GROSSESSE Int NOT NULL ,
	CONSTRAINT MEDICAL_PK PRIMARY KEY (ID_MEDICAL) ,
	CONSTRAINT MEDICAL_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));
CREATE TABLE RDV(
        ID_RDV       Int  Auto_increment  NOT NULL ,
        TITRE        Varchar (50) NOT NULL ,
        BODY         Varchar (255) ,
        DATE         Datetime NOT NULL ,
        ID_GROSSESSE Int NOT NULL ,
        ID_MEDICAL   Int ,
	CONSTRAINT RDV_PK PRIMARY KEY (ID_RDV) ,
	CONSTRAINT RDV_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE) ,
	CONSTRAINT RDV_MEDICAL_FK FOREIGN KEY (ID_MEDICAL) REFERENCES MEDICAL(ID_MEDICAL));
CREATE TABLE SEMAINE(
        NUM_SEMAINE   Int NOT NULL ,
        FRUIT         Varchar (50) NOT NULL ,
        TAILLE        Varchar (20) NOT NULL ,
        POIDS         Varchar (20) NOT NULL ,
        TITRE_PHOTO   Varchar (50) ,
        TEXTE_PHOTO   Varchar (50) ,
        CONSTRAINT SEMAINE_PK PRIMARY KEY (NUM_SEMAINE));
CREATE TABLE FORMULAIRE(
        ID_FORMULAIRE Int  Auto_increment  NOT NULL ,
        TYPE_QUESTION Varchar (20) NOT NULL ,
        INTITULE      Varchar (255) NOT NULL ,
        PRONOSTIC     Boolean DEFAULT false NOT NULL ,
        NUM_SEMAINE   Int ,
	CONSTRAINT FORMULAIRE_PK PRIMARY KEY (ID_FORMULAIRE) ,
        CONSTRAINT FORMULAIRE_SEMAINE_FK FOREIGN KEY (NUM_SEMAINE) REFERENCES SEMAINE(NUM_SEMAINE));
CREATE TABLE PHOTO(
        ID_PHOTO     Int  Auto_increment  NOT NULL ,
        LIEN         Varchar (255) NOT NULL ,
        INFO         Varchar (50) NOT NULL ,
        PERSONNE     Varchar (40) NOT NULL ,
        ID_GROSSESSE Int NOT NULL ,
        NUM_SEMAINE  Int NOT NULL ,
	CONSTRAINT PHOTO_PK PRIMARY KEY (ID_PHOTO) ,
        CONSTRAINT PHOTO_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE) ,
	CONSTRAINT PHOTO_SEMAINE_FK FOREIGN KEY (NUM_SEMAINE) REFERENCES SEMAINE(NUM_SEMAINE));
CREATE TABLE ADRESSE(
        ID_ADRESSE   Int  Auto_increment  NOT NULL ,
        NOM          Varchar (30) NOT NULL ,
        PRENOM       Varchar (30) NOT NULL ,
        ADRESSE      Varchar (80) NOT NULL ,
        CP           Varchar (5) NOT NULL ,
        VILLE        Varchar (40) NOT NULL ,
        ID_GROSSESSE Int NOT NULL ,
	CONSTRAINT ADRESSE_PK PRIMARY KEY (ID_ADRESSE) ,
	CONSTRAINT ADRESSE_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));
CREATE TABLE REPONSE(
        ID_REPONSE    Int  Auto_increment  NOT NULL ,
        REPONSE       Varchar (100) NOT NULL ,
        PRENOM        Varchar (30) NOT NULL ,
        ID_FORMULAIRE Int NOT NULL ,
	CONSTRAINT REPONSE_PK PRIMARY KEY (ID_REPONSE) ,
	CONSTRAINT REPONSE_FORMULAIRE_FK FOREIGN KEY (ID_FORMULAIRE) REFERENCES FORMULAIRE(ID_FORMULAIRE));
CREATE TABLE MSG_PRIVE(
    	ID_MSG_PRIVE     	Int  Auto_increment  NOT NULL ,
        ID_EXPEDITEUR		Int NOT NULL ,
        ID_DESTINATAIRE     Int NOT NULL ,
        DATE                Datetime DEFAULT CURRENT_TIMESTAMP ,
        TITRE               Varchar (50) ,
        BODY                Varchar (255) NOT NULL ,
	CONSTRAINT MSG_PRIVE_PK PRIMARY KEY (ID_MSG_PRIVE) ,
	CONSTRAINT MSG_PRIVE_USER_FK FOREIGN KEY (ID_EXPEDITEUR) REFERENCES USER(ID_USER) ,
	CONSTRAINT MSG_PRIVE_USER2_FK FOREIGN KEY (ID_DESTINATAIRE) REFERENCES USER(ID_USER));
CREATE TABLE COM_BLOG(
        ID_COM_BLOG Int  Auto_increment  NOT NULL ,
        TITRE       Varchar (50) ,
        BODY        Varchar (255) NOT NULL ,
        DATE        Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL ,
        ID_USER     Int NOT NULL ,
        ID_ARTICLE  Int NOT NULL ,
	CONSTRAINT COM_BLOG_PK PRIMARY KEY (ID_COM_BLOG) ,
	CONSTRAINT COM_BLOG_USER_FK FOREIGN KEY (ID_USER) REFERENCES USER(ID_USER) ,
	CONSTRAINT COM_BLOG_ARTICLE_BLOG_FK FOREIGN KEY (ID_ARTICLE) REFERENCES ARTICLE_BLOG(ID_ARTICLE));
CREATE TABLE COM_FORUM(
        ID_COM_FORUM Int  Auto_increment  NOT NULL ,
        TITRE        Varchar (50) NOT NULL ,
        BODY         Varchar (255) NOT NULL ,
        DATE         Datetime DEFAULT CURRENT_TIMESTAMP NOT NULL ,
        ID_USER      Int NOT NULL ,
        ID_POST      Int NOT NULL ,
	CONSTRAINT COM_FORUM_PK PRIMARY KEY (ID_COM_FORUM) ,
	CONSTRAINT COM_FORUM_USER_FK FOREIGN KEY (ID_USER) REFERENCES USER(ID_USER) ,
	CONSTRAINT COM_FORUM_POST_FORUM0_FK FOREIGN KEY (ID_POST) REFERENCES POST_FORUM(ID_POST));
CREATE TABLE INVITE(
        ID_INVITE     Int  Auto_increment  NOT NULL ,
        LIEN          Varchar (100) NOT NULL ,
        NOM           Varchar (30)  NOT NULL ,
        DATE_VALIDITE Date NOT NULL ,
        ID_GROSSESSE  Int NOT NULL ,
        CONSTRAINT INVITE_PK PRIMARY KEY (ID_INVITE) ,
        CONSTRAINT INVITE_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));
CREATE TABLE SEMAINE_GROSSESSE(
        NUM_SEMAINE  Int NOT NULL ,
        ID_GROSSESSE Int NOT NULL ,
        STATUT       ENUM ('vide','en_attente', 'valide') ,
	CONSTRAINT SEMAINE_GROSSESSE_PK PRIMARY KEY (NUM_SEMAINE,ID_GROSSESSE) ,
	CONSTRAINT SEMAINE_GROSSESSE_SEMAINE_FK FOREIGN KEY (NUM_SEMAINE) REFERENCES SEMAINE(NUM_SEMAINE) ,
	CONSTRAINT SEMAINE_GROSSESSE_GROSSESSE_FK FOREIGN KEY (ID_GROSSESSE) REFERENCES GROSSESSE(ID_GROSSESSE));